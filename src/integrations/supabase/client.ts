
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://hqmpfnjiunjqwyppscad.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImhxbXBmbmppdW5qcXd5cHBzY2FkIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDUxMDI1MzksImV4cCI6MjA2MDY3ODUzOX0.C9HNymy6S9cp1Fd36SdKRufN_RduTuCt2f95dGGowgg";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    persistSession: true,
    autoRefreshToken: true,
    storage: localStorage
  },
  global: {
    fetch: function customFetch(input, init) {
      // Add custom logging and timeout for debugging
      console.log('Supabase fetch request:', typeof input === 'string' ? input : input.url);
      
      // Create a promise that rejects after 15 seconds
      const timeoutPromise = new Promise((_, reject) => {
        setTimeout(() => reject(new Error('Supabase request timeout')), 15000);
      });
      
      // Race the fetch with the timeout
      return Promise.race([
        fetch(input, init).catch(error => {
          console.error('Supabase fetch error:', error);
          throw error;
        }),
        timeoutPromise
      ]);
    }
  }
});

// Helper function to check connection status
export const checkSupabaseConnection = async () => {
  try {
    console.log('Testing Supabase connection...');
    const startTime = Date.now();
    
    const { error } = await supabase.from('users').select('count', { count: 'exact', head: true });
    
    const duration = Date.now() - startTime;
    console.log(`Supabase connection test took ${duration}ms`);
    
    if (error) {
      console.error('Supabase connection check failed:', error);
      return false;
    }
    
    console.log('Supabase connection successful');
    return true;
  } catch (err) {
    console.error('Supabase connection test error:', err);
    return false;
  }
};
